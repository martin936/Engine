// shadertype=glsl

#version 450

layout(binding = 0, r32ui) uniform uimage2D CullLightPtr;
layout(binding = 1, r32ui) uniform uimage3D LightIndexPtr;

layout(binding = 2, std430) buffer buf0
{
	uint	nextAddrCull;
	uvec2	CullNodes[];
};


layout(binding = 3, std430) buffer buf1
{
	uint	nextAddrIndex;
	uvec2	IndexNodes[];
};


layout(binding = 4, std430) buffer buf2
{
	uint	nextAddrSortedIndex;
	uvec2	SortedIndexNodes[];
};


layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;
void main(void)
{
	if (gl_LocalInvocationIndex == 0)
	{
		nextAddrCull		= 0;
		nextAddrIndex		= 0;
		nextAddrSortedIndex = 0;
	}

	uvec3 size = imageSize(LightIndexPtr);

	if (gl_GlobalInvocationID.x < size.x && gl_GlobalInvocationID.y < size.y)
	{
		if (gl_GlobalInvocationID.z == 0)
			imageStore(CullLightPtr, ivec2(gl_GlobalInvocationID.xy), uvec4(0xffffffff, 0, 0, 0));

		imageStore(LightIndexPtr, ivec3(gl_GlobalInvocationID.xyz), uvec4(0xffffffff, 0, 0, 0));
	}
}
