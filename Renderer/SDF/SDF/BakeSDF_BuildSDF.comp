#version 450

layout(binding = 0, rgba16ui)	uniform readonly restrict	uimage3D	VoronoiTex;
layout(binding = 1, r32f)		uniform 					image3D		SDFTex;
layout(binding = 2, rgba8)		uniform 					image3D		VolumeAlbedo;


layout(push_constant) uniform pc0
{
	vec3 Size;
};


layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;
void main() 
{
	ivec3 GridSize = imageSize(VoronoiTex).xyz;

	if (gl_GlobalInvocationID.x < GridSize.x && gl_GlobalInvocationID.y < GridSize.y && gl_GlobalInvocationID.z < GridSize.z)
	{
		float d			= abs(imageLoad(SDFTex, ivec3(gl_GlobalInvocationID)).r);
		uvec3 coords	= imageLoad(VoronoiTex, ivec3(gl_GlobalInvocationID)).rgb;
		vec4 albedo		= imageLoad(VolumeAlbedo, ivec3(coords));

		if (d > 1e3f)
		{			
			float cellSize	= 0.5f * length(Size / GridSize);

			vec3 wP		= (vec3(gl_GlobalInvocationID) / vec3(GridSize.xyz) - 0.5f) * Size.xyz;
			vec3 wPs	= (vec3(coords) / vec3(GridSize.xyz) - 0.5f) * Size.xyz;

			//coords = ivec3(GridSize.xyz * (wPs / Size.xyz + 0.5f));

			d = max(cellSize, distance(wP, wPs) - cellSize);

			d /= max(max(Size.x, Size.y), Size.z);
		}

		imageStore(SDFTex, ivec3(gl_GlobalInvocationID), d.xxxx);
		imageStore(VolumeAlbedo, ivec3(gl_GlobalInvocationID), albedo);
	}
}

