// shadertype=glsl

#version 450


uniform layout(rgba16f, binding = 0) image2D ResolvedColor;


layout(location = 0) uniform sampler2D		VelocityMap;
layout(location = 1) uniform sampler2D		History;


layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
void main(void)
{
	vec2 texcoords = (gl_GlobalInvocationID.xy + 0.5f) / vec2(textureSize(VelocityMap, 0));

	vec2 velocity = -textureLod(VelocityMap, texcoords, 0.f).rg;
	vec2 reproj_coords = texcoords + velocity;

	vec3 c0 = imageLoad(ResolvedColor, ivec2(gl_GlobalInvocationID.xy)).rgb;
	vec3 c1 = textureLod(History, reproj_coords, 0).rgb;

	vec3 finalColor = mix(c0, c1, 0.99f.xxx);

	imageStore(ResolvedColor, ivec2(gl_GlobalInvocationID.xy), vec4(finalColor, 0.f));
}
